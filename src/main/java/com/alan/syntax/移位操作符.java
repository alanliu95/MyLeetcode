package com.alan.syntax;

/**
 * >> 是带符号右移，若左操作数是正数，则高位补“0”，若左操作数是负数，则高位补“1”.
 * << 将左操作数向左边移动，并且在低位补0.
 * >>> 是无符号右移，无论左操作数是正数还是负数，在高位都补“0”
 */

/**
 * 注意原码是有符号位存在的，最高位作符号位，所以负数最后位的值为1
 * 如果左操作数为正数，其补码就是其本身，补码的移位操作结果和原码一样
 * 负数的反码是数值位反转，注意符号位保持不变，也不存在来自符号位的进位导致其反转
 * 如果右操作数是负数，补码是其反码+1，补码的符号位参与运算，所以-0 和+0 的补码都是 0000 0000
 */
public class 移位操作符 {
    public static void main(String[] args) {
        int i = -3;
        System.out.println(i >>> 1);
    }
}
